---
name: Docker

on:
  workflow_run:
    workflows: ["build"]
    branches: "main"
    types: [completed]

permissions: read-all

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  semantic-release:
    name: Semantic release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    if: ${{ github.event_name != 'pull_request' && github.event_name != 'release' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        with:
          extra_plugins: |
            conventional-changelog-conventionalcommits@5.0.0
        env:
          # workflows created by GITHUB_TOKEN cannot trigger other workflows, see below
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build-and-push:
    name: Docker build & publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

#    - name: Install cosign
#      if: github.event_name != 'pull_request'
#      uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
#      with:
#        cosign-release: 'v2.2.4'
      - name: Extract version from Git tag
        id: get_version
        run: echo "VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@327cd5a69de6c009b9ce71bce8395f28e651bf99
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=true

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}

  #  - name: Sign the published Docker image
  #    if: ${{ github.event_name != 'pull_request' }}
  #    env:
  #      # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
  #      TAGS: ${{ steps.meta.outputs.tags }}
  #      DIGEST: ${{ steps.build-and-push.outputs.digest }}
  #      # This step uses the identity token to provision an ephemeral certificate
  #      # against the sigstore community Fulcio instance.
  #    run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}